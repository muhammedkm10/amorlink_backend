version: '3.9'

services:
  web:
    build: .
    command: ["gunicorn", "--bind", ":8000", "backend.wsgi:application"]
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
    env_file:
      - .env
    
  db:
    image: postgres
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
  
  celery-beat:
    build: .
    command: ["celery", "-A", "backend", "beat", "--loglevel=info"]
    volumes:
      - .:/app 
    depends_on:
      - db
    env_file:
      - .env

  celery-worker:
    build: .
    command: ["celery", "-A", "backend", "worker", "--loglevel=info"]
    volumes:
      - .:/app
    depends_on:
      - db
    env_file:
      - .env
  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
  daphne:
    build: .  # Build context same as your Django service
    depends_on:
      - web  # Ensure Daphne starts after Django is up
    ports:
      - "8002:8002"  # Map WebSocket port (adjust as needed)
    volumes:
      - .:/app  # Mount project directory
    command:
      - daphne
      - --bind=localhost:8002  # Bind address and port for Daphne
      - backend.asgi:application 
 

volumes:
  db_data:

networks:
  backend-network:
    driver: bridge