version: '3.9'
services:
  web:
    build: .
    command: ["gunicorn", "--bind", ":8000", "backend.wsgi:application"]
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
    env_file:
      - .env

    networks:
      - backend-network

  db:
    image: postgres
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}

    networks:
      - backend-network

  celery-beat:
    build: .
    command: ["celery", "-A", "backend", "beat", "--loglevel=info"]
    volumes:
      - .:/app 
      - .:/app
    depends_on:
      - db
    env_file:
      - .env
    networks:
      - backend-network

  celery-worker:
    build: .
    command: ["celery", "-A", "backend", "worker", "--loglevel=info"]
    volumes:
      - .:/app
    depends_on:
      - db
    env_file:
      - .env
    networks:
      - backend-network

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    networks:
      - backend-network
  daphne:
    build: .
    command: ["daphne", "--django-asgi", "-b", "0.0.0.0", "-p", "8001", "backend.asgi:application"]
    volumes:
      - .:/app
    ports:
      - "8001:8001"
    depends_on:
      - db
    env_file:
      - .env
    networks:
      - backend-network

  

volumes:
  db_data:

networks:
  backend-network:
    driver: bridge